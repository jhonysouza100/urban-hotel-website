=== VERSION 0.0.1 ===
- colocar button de OK
- programar thema claro. OK
- colocar button de thema. OK
- programar theme button. OK
- programer el footer. OK
- programar el area de checklist. OK
- agregar metadatos. OK

clases via script
.is-clickable
.is-descktop
.is-scroll
.is-open
.is-show
.is-active

=== VERSION 0.1.0 ===
- instalar un framework → parcel.js OK
- configurar el proyecto → carpeta src. OK
- implementar Auth0 → login button. OK
- conceder permisos en Auth0. OK
- conceder permisos en la API (christmas-giveaway-api) → renombrar como "users-api".
- agregar enviroment de conexiones en el hosting para la API y Auth0.
- renombrar la base de datos "christmas-giveaway-db" como "users-db".
- agregar a la base de datos una tabla (comments) para comentarios y valoraciones → id, content, rate, userId = key, createAt, updatedAt.

- mostart datos del usuario logueado.

- conceder permisos en la API (views-api).
- renombrar la base de datos "views" como "views-db"?.
- agregar a la base de datos una tabla (urban-views) para manejar las vistas del hotel → renombrar tabla "views" como "main-views"?.

- agregar API del clima.
- mostrar el clima de iguazú.
- agregar api de "google maps".
- agregar componente de comentarios dfe facebook. OK
- agregar api de moderacion a los comentarios de facebook.

- crear un metodos para renderizar cada polaroid desde un object. OK
- agregar un "button" a cada polaroid para ver mas fotos.
- agregar una "page" para galeria de fotos grid → diseño instagram.
- renderiza una componente galeria de imagenes → layout/imageGallery.jsx.
- al hacer "click" en una polaroid "ver más" este debera abrir una "page/gallery.jsx" con layout>imageGallery renderizada segun el arobject de "images" relacionado con el polaroid → ejem: piscina-polaroid.onclick => photosPiscina = {}.forEach(el => (<>el</>))
